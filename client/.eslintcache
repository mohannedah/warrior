[{"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\index.js":"1","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\App.js":"2","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Header.js":"3","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Footer.js":"4","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\Home.js":"5","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\products.js":"6","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Product.js":"7","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Rating.js":"8","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ProductScreen.js":"9","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\store.js":"10","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\constants\\productConstants.js":"11","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\actions\\productActions.js":"12","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Loader.js":"13","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\CartScreen.js":"14","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Cart\\cartState.js":"15","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\constants\\cartConstants.js":"16","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Cart\\cartContext.js":"17","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Cart\\cartReducer.js":"18","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Message.js":"19","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\User\\userState.js":"20","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\User\\userReducer.js":"21","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\constants\\userConstants.js":"22","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\User\\UserContext.js":"23","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\loginScreen.js":"24","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\RegisterScreen.js":"25","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ProfileScreen.js":"26","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Order\\OrderState.js":"27","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Order\\orderReducer.js":"28","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\constants\\orderConstants.js":"29","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Order\\orderContext.js":"30","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ShippingScreen.js":"31","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Product\\productContext.js":"32","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Product\\productState.js":"33","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Product\\productListReducer.js":"34","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\PaymentScreen.js":"35","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\FormContainer.js":"36","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\PlaceOrderScreen.js":"37","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\OrderScreen.js":"38","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\UserListScreen.js":"39","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\UserEditScreen.js":"40","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\OrdersAdminScreen.js":"41","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\reducers\\productListReducer.js":"42","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\reducers\\cartReducer.js":"43","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\actions\\cartActions.js":"44","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\reducers\\userReducers.js":"45","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\actions\\userActions.js":"46","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\reducers\\orderReducer.js":"47","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\actions\\orderActions.js":"48","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ProductAdminScreen.js":"49","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ProductEditScreen.js":"50","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Carousel.js":"51","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Meta.js":"52","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\SearchBar.js":"53"},{"size":294,"mtime":1608743765232,"results":"54","hashOfConfig":"55"},{"size":3147,"mtime":1609276150349,"results":"56","hashOfConfig":"55"},{"size":3167,"mtime":1609280337282,"results":"57","hashOfConfig":"55"},{"size":336,"mtime":1609223052730,"results":"58","hashOfConfig":"55"},{"size":1962,"mtime":1609304753728,"results":"59","hashOfConfig":"55"},{"size":2488,"mtime":1608024270545,"results":"60","hashOfConfig":"55"},{"size":884,"mtime":1609369051395,"results":"61","hashOfConfig":"55"},{"size":1582,"mtime":1609369208924,"results":"62","hashOfConfig":"55"},{"size":8069,"mtime":1609213081675,"results":"63","hashOfConfig":"55"},{"size":2530,"mtime":1609286392575,"results":"64","hashOfConfig":"55"},{"size":1696,"mtime":1609198523406,"results":"65","hashOfConfig":"55"},{"size":5374,"mtime":1609275965763,"results":"66","hashOfConfig":"55"},{"size":410,"mtime":1608098577226,"results":"67","hashOfConfig":"55"},{"size":3849,"mtime":1609221590575,"results":"68","hashOfConfig":"55"},{"size":1245,"mtime":1608562698158,"results":"69","hashOfConfig":"55"},{"size":84,"mtime":1608113381374,"results":"70","hashOfConfig":"55"},{"size":111,"mtime":1608113111741,"results":"71","hashOfConfig":"55"},{"size":918,"mtime":1608752100664,"results":"72","hashOfConfig":"55"},{"size":202,"mtime":1608132333893,"results":"73","hashOfConfig":"55"},{"size":11383,"mtime":1608735623972,"results":"74","hashOfConfig":"55"},{"size":7359,"mtime":1608654697635,"results":"75","hashOfConfig":"55"},{"size":1206,"mtime":1608860252516,"results":"76","hashOfConfig":"55"},{"size":111,"mtime":1608203415824,"results":"77","hashOfConfig":"55"},{"size":2311,"mtime":1609221722336,"results":"78","hashOfConfig":"55"},{"size":2793,"mtime":1609222392288,"results":"79","hashOfConfig":"55"},{"size":4950,"mtime":1609222177405,"results":"80","hashOfConfig":"55"},{"size":1774,"mtime":1608382780144,"results":"81","hashOfConfig":"55"},{"size":697,"mtime":1608382855201,"results":"82","hashOfConfig":"55"},{"size":1691,"mtime":1609285872417,"results":"83","hashOfConfig":"55"},{"size":113,"mtime":1608301120385,"results":"84","hashOfConfig":"55"},{"size":3160,"mtime":1609222477945,"results":"85","hashOfConfig":"55"},{"size":117,"mtime":1608376168811,"results":"86","hashOfConfig":"55"},{"size":1941,"mtime":1608376195597,"results":"87","hashOfConfig":"55"},{"size":1210,"mtime":1608376206020,"results":"88","hashOfConfig":"55"},{"size":1847,"mtime":1609221982973,"results":"89","hashOfConfig":"55"},{"size":352,"mtime":1608385448463,"results":"90","hashOfConfig":"55"},{"size":5590,"mtime":1609221950432,"results":"91","hashOfConfig":"55"},{"size":8557,"mtime":1609286610715,"results":"92","hashOfConfig":"55"},{"size":2582,"mtime":1608578055581,"results":"93","hashOfConfig":"55"},{"size":2295,"mtime":1609222286317,"results":"94","hashOfConfig":"55"},{"size":2310,"mtime":1609222334138,"results":"95","hashOfConfig":"55"},{"size":5799,"mtime":1609198571685,"results":"96","hashOfConfig":"55"},{"size":881,"mtime":1608757331970,"results":"97","hashOfConfig":"55"},{"size":696,"mtime":1608825982754,"results":"98","hashOfConfig":"55"},{"size":3462,"mtime":1608862185367,"results":"99","hashOfConfig":"55"},{"size":3419,"mtime":1608858456450,"results":"100","hashOfConfig":"55"},{"size":6620,"mtime":1609287711473,"results":"101","hashOfConfig":"55"},{"size":5558,"mtime":1609287141236,"results":"102","hashOfConfig":"55"},{"size":3707,"mtime":1609222012630,"results":"103","hashOfConfig":"55"},{"size":5400,"mtime":1609222078046,"results":"104","hashOfConfig":"55"},{"size":1345,"mtime":1609198146461,"results":"105","hashOfConfig":"55"},{"size":317,"mtime":1609212676976,"results":"106","hashOfConfig":"55"},{"size":961,"mtime":1609281016928,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"12nybi5",{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"110"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"110"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"110"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"110"},"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\index.js",[],["246","247"],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\App.js",["248","249","250"],"import \"./App.css\";\nimport { Fragment } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"../src/components/Header\";\nimport Footer from \"../src/components/Footer\";\nimport Home from \"./Screens/Home\";\nimport ProductState from \"./contexts/Product/productState\";\nimport ProductScreen from \"./Screens/ProductScreen\";\nimport CartScreen from \"./Screens/CartScreen\";\nimport UserState from \"./contexts/User/userState\";\nimport loginScreen from \"./Screens/loginScreen\";\nimport RegisterScreen from \"./Screens/RegisterScreen\";\nimport ProfileScreen from \"./Screens/ProfileScreen\";\nimport UserListScreen from \"./Screens/UserListScreen\";\nimport OrderScreen from \"./Screens/OrderScreen\";\nimport ShippingScreen from \"./Screens/ShippingScreen\";\nimport PaymentScreen from \"./Screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./Screens/PlaceOrderScreen\";\nimport UserEditScreen from \"./Screens/UserEditScreen\";\nimport ProductAdminScreen from \"./Screens/ProductAdminScreen\";\nimport OrdersAdminScreen from \"./Screens/OrdersAdminScreen\";\nimport ProductEditScreen from \"./Screens/ProductEditScreen\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CartState from \"./contexts/Cart/cartState\";\nimport OrderState from \"./contexts/Order/OrderState\";\n\nfunction App() {\n  return (\n    <Router>\n      <ProductState>\n        <CartState>\n          <UserState>\n            <Header />\n            <main>\n              <Container>\n                <Route path='/' component={Home} exact />\n                <Route path='/product/:id' component={ProductScreen} exact />\n                <Route path='/cart/:id?' component={CartScreen} exact />\n                <Route path='/login' component={loginScreen} exact />\n                <Route path='/register' component={RegisterScreen} exact />\n                <Route path='/profile' component={ProfileScreen} exact />\n                <Route path='/shipping' component={ShippingScreen} exact />\n                <Route path='/payment' component={PaymentScreen} exact />\n                <Route path='/placeOrder' component={PlaceOrderScreen} exact />\n                <Route path='/order/:id' component={OrderScreen} exact />\n                <Route path='/admin/users' component={UserListScreen} exact />\n                <Route path='/search/:keyword' component={Home} exact />\n                <Route\n                  path='/admin/product/:id/edit'\n                  component={ProductEditScreen}\n                  exact\n                />\n                <Route\n                  path='/admin/products'\n                  component={ProductAdminScreen}\n                  exact\n                />\n                <Route\n                  path='/admin/user/:id'\n                  component={UserEditScreen}\n                  exact\n                />\n                <Route\n                  path='/admin/orders'\n                  component={OrdersAdminScreen}\n                  exact\n                />\n              </Container>\n            </main>\n            <Footer />\n          </UserState>\n        </CartState>\n      </ProductState>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Header.js",["251","252"],"import React, { useContext, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logOut } from \"../actions/userActions\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport SearchPage from \"./SearchBar\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst Header = ({ history, location }) => {\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  const { user, loggedIn } = userInfo;\r\n  // const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  // useEffect(() => {\r\n  //   if (!loggedIn) {\r\n  //     history.push(redirect);\r\n  //   }\r\n  // }, [loggedIn, history, location]);\r\n\r\n  const onClick = (e) => {\r\n    dispatch(logOut());\r\n    history.push(\"/\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' expand='lg' variant='dark' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>HoodieShop</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Route render={({ history }) => <SearchPage history={history} />} />\r\n\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart' /> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/login'>\r\n                {!loggedIn ? (\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user' /> Sign In\r\n                  </Nav.Link>\r\n                ) : (\r\n                  <Fragment>\r\n                    <NavDropdown title={`Hello ${user.name}`} id='username'>\r\n                      <LinkContainer to={`/profile`}>\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <LinkContainer to='/' onClick={onClick}>\r\n                        <NavDropdown.Item>LogOut</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      {user.isAdmin && (\r\n                        <>\r\n                          <LinkContainer to='/admin/users'>\r\n                            <NavDropdown.Item>Users</NavDropdown.Item>\r\n                          </LinkContainer>\r\n                          <LinkContainer to='/admin/orders'>\r\n                            <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                          </LinkContainer>\r\n                          <LinkContainer to='/admin/products'>\r\n                            <NavDropdown.Item>Products</NavDropdown.Item>\r\n                          </LinkContainer>\r\n                        </>\r\n                      )}\r\n                    </NavDropdown>\r\n                  </Fragment>\r\n                )}\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Footer.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\Home.js",["253","254","255","256"],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\products.js",[],["257","258"],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Product.js",["259"],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Rating.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ProductScreen.js",["260","261","262","263"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport { CircleLoading } from \"react-loadingg\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  ListGroup,\r\n  Image,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n// import products from \"../products\";\r\nimport { getProduct } from \"../actions/productActions\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport { REVIEW_PRODUCT_RESET } from \"../constants/productConstants\";\r\nimport { Fragment } from \"react\";\r\nimport { reviewProductAction } from \"../actions/productActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const indProduct = useSelector((state) => state.indProduct);\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  const { user } = userInfo;\r\n  const reviewProduct = useSelector((state) => state.reviewProduct);\r\n  const {\r\n    errorProductReview,\r\n    loadingProductReview,\r\n    successProductReview,\r\n  } = reviewProduct;\r\n  const { product, reviews, loading } = indProduct;\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const addToCart = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(match.params.id));\r\n  }, [match, successProductReview]);\r\n\r\n  const submitHandler = (e) => {\r\n    dispatch(reviewProductAction(product._id, comment, rating));\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <CircleLoading />\r\n      ) : (\r\n        <Fragment>\r\n          <Meta content={product.description} title={product.name} />\r\n          <Link to='/' className='btn btn-ligh'>\r\n            Go Back\r\n          </Link>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid></Image>\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                    color='#FFDF00'\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Price: <strong>${product.price}</strong>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>{product.description}</ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>{product.price}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Button\r\n                        className='btn-block'\r\n                        disabled={product.countInStock === 0}\r\n                        onClick={addToCart}\r\n                      >\r\n                        Add to Cart\r\n                      </Button>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>\r\n                          <span>Qty</span>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6} className='my-4'>\r\n              <h2>Reviews</h2>\r\n              {reviews.length === 0 && (\r\n                <Message message='No Reviews on this product' />\r\n              )}\r\n              <ListGroup variant='flush'>\r\n                {reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} color='#FFDF00' />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message\r\n                      variant='success'\r\n                      message='Review Submitted Successfully'\r\n                    />\r\n                  )}\r\n                  {loadingProductReview && <CircleLoading />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger' message={errorProductReview} />\r\n                  )}\r\n                  {user.name ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Fragment>\r\n                      Please {\"\"}\r\n                      <Link to='/login'>sign in</Link>\r\n                      {\"\"} to write a review\r\n                    </Fragment>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </Fragment>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\store.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\constants\\productConstants.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\actions\\productActions.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Loader.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\CartScreen.js",["264","265","266"],"import React, { useContext, useEffect, Fragment } from \"react\";\r\nimport { addCart, removeItem } from \"../actions/cartActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  List,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\nimport CartContext from \"../contexts/Cart/cartContext\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    dispatch(addCart(match.params.id, Number(location.search.split(\"=\")[1])));\r\n  }, [match, location.search, dispatch]);\r\n\r\n  const checkoutBtn = (e) => {\r\n    history.push(\"/login?redirect=shipping\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  const removeAnItem = (id) => {\r\n    dispatch(removeItem(id));\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Meta content='Cart' title='Shooping Cart' />\r\n\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Fragment>\r\n            <Message variant='primary' message='Your cart is empty' />{\" \"}\r\n            <Link className='btn btn-dark' to='/'>\r\n              Go Back\r\n            </Link>\r\n          </Fragment>\r\n        ) : (\r\n          <ListGroup>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item variant='flush'>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} fluid rounded></Image>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <span>\r\n                      <strong>${item.price}</strong>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addCart(item.product, e.target.value))\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button onClick={(e) => removeAnItem(item.product)}>\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='fulsh'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Price:</Col>\r\n                <Col>\r\n                  ${\" \"}\r\n                  {cartItems\r\n                    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                    .toFixed(2)}\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <button className='btn btn-block btn-dark' onClick={checkoutBtn}>\r\n                Proceed to checkout\r\n              </button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Cart\\cartState.js",["267"],"import React, { useReducer, useEffect } from \"react\";\r\nimport CartContext from \"./cartContext\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport {\r\n  ADD_ITEMS,\r\n  ADD_IEMS_FAIL,\r\n  REMOVE_ITEMS,\r\n} from \"../../constants/cartConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst CartState = (props) => {\r\n  const initialState = {\r\n    cartItems: [],\r\n  };\r\n  const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cartInfo\", JSON.stringify(state.cartItems));\r\n  }, [state]);\r\n\r\n  const addCart = async (id, qty) => {\r\n    const { data } = await axios.get(`/api/products/${id}?qty=${qty}`);\r\n\r\n    dispatch({\r\n      type: ADD_ITEMS,\r\n      payload: {\r\n        product: data._id,\r\n        name: data.name,\r\n        price: data.price,\r\n        image: data.image,\r\n        countInStock: data.countInStock,\r\n        qty: Number(qty),\r\n      },\r\n    });\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    dispatch({ type: REMOVE_ITEMS, payload: id });\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartItems: state.cartItems,\r\n        addCart,\r\n        removeItem,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartState;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\constants\\cartConstants.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Cart\\cartContext.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Cart\\cartReducer.js",["268","269","270"],"import React from \"react\";\r\nimport { ADD_ITEMS, REMOVE_ITEMS } from \"../../constants/cartConstants\";\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_ITEMS:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n      break;\r\n\r\n    case REMOVE_ITEMS:\r\n      return {\r\n        cartItems: state.cartItems.filter(\r\n          (item) => action.payload !== item.product\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return {\r\n        state,\r\n      };\r\n      break;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Message.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\User\\userState.js",["271"],"import React, { useReducer, useEffect } from \"react\";\r\nimport { userReducer } from \"./userReducer\";\r\nimport UserContext from \"./UserContext\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LOGIN_FAIL,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  GET_PROFILE_REQUEST,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  GET_ALL_USERS_REQUEST,\r\n  GET_ALL_USERS_SUCCESS,\r\n  GET_ALL_USERS_FAIL,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_FAIL,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n} from \"../../constants/userConstants\";\r\nimport {\r\n  PLACE_ORDER_REQUEST,\r\n  PLACE_ORDER_SUCCESS,\r\n  PLACE_ORDER_FAIL,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_FAIL,\r\n  SET_PAYMENT_METHOD,\r\n  SHIPPING_ADDRESS,\r\n  PAY_ORDER_REQUEST,\r\n  PAY_ORDER_SUCCESS,\r\n  PAY_ORDER_FAIL,\r\n  PAY_ORDER_RESET,\r\n  GET_AN_ORDER_REQUEST,\r\n  GET_AN_ORDER_SUCCESS,\r\n  GET_AN_ORDER_FAIL,\r\n  GET_ALL_ORDERS_REQUEST,\r\n  GET_ALL_ORDERS_SUCCESS,\r\n  GET_ALL_ORDERS_FAIL,\r\n} from \"../../constants/orderConstants\";\r\n\r\nconst UserState = (props) => {\r\n  const initialState = {\r\n    user: localStorage.getItem(\"userInfo\")\r\n      ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n      : {},\r\n    users: [],\r\n    loading: true,\r\n    errors: false,\r\n    error: {},\r\n    loggedIn: false,\r\n    token: null,\r\n    shippingAddress: localStorage.getItem(\"shippingAddress\")\r\n      ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n      : {},\r\n    entered: false,\r\n    paymentMethod: localStorage.getItem(\"PaymentMethod\")\r\n      ? JSON.parse(localStorage.getItem(\"PaymentMethod\"))\r\n      : null,\r\n    order: {},\r\n    placed: false,\r\n    taxPrice: \"0.00\",\r\n    shippingPrice: \"0.00\",\r\n    success: false,\r\n    evaluating: false,\r\n    orders: [],\r\n    updateUser: {},\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(state.user));\r\n    localStorage.setItem(\r\n      \"shippingAddress\",\r\n      JSON.stringify(state.shippingAddress)\r\n    );\r\n    localStorage.setItem(\"PaymentMethod\", JSON.stringify(state.paymentMethod));\r\n  }, [state]);\r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      dispatch({ type: LOGIN_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/users/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const registerUser = async (email, password, name, passwordConfirm) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      dispatch({ type: REGISTER_REQUEST });\r\n      const { data } = await axios.post(\r\n        \"/api/users/register\",\r\n        { email, password, name, passwordConfirm },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: REGISTER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getProfile = async (id) => {\r\n    try {\r\n      dispatch({ type: GET_PROFILE_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/users/${id}`, config);\r\n      dispatch({ type: GET_PROFILE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      dispatch({\r\n        type: GET_PROFILE_FAIL,\r\n        payload: error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (email, password, name, passwordConfirm, id) => {\r\n    try {\r\n      dispatch({ type: UPDATE_PROFILE_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/users/${id}`,\r\n        { email, name, password, passwordConfirm },\r\n        config\r\n      );\r\n      dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      dispatch({\r\n        type: UPDATE_PROFILE_FAIL,\r\n        payload: error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveShippingAddress = async (\r\n    name,\r\n    country,\r\n    city,\r\n    postalCode,\r\n    address\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: SHIPPING_ADDRESS,\r\n        payload: { name, country, city, postalCode, address },\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const setPayment = (data) => {\r\n    dispatch({ type: SET_PAYMENT_METHOD, payload: data });\r\n  };\r\n\r\n  const placeOrder = async (order) => {\r\n    try {\r\n      dispatch({ type: PLACE_ORDER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/order\", order, config);\r\n      dispatch({ type: PLACE_ORDER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      dispatch({\r\n        type: PLACE_ORDER_FAIL,\r\n        payload: error.response ? error.response.data.msg : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOrder = async (id) => {\r\n    try {\r\n      dispatch({ type: GET_ORDER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/order/${id}`, config);\r\n      dispatch({ type: GET_ORDER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      dispatch({\r\n        type: GET_ORDER_FAIL,\r\n        payload: error.response ? error.response.data.msg : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const payOrder = async (id, token) => {\r\n    try {\r\n      dispatch({ type: PAY_ORDER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/order/${id}/pay`,\r\n        { token },\r\n        config\r\n      );\r\n      dispatch({ type: PAY_ORDER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      dispatch({\r\n        type: PAY_ORDER_FAIL,\r\n        payload: error.response ? error.response.data.msg : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getOrders = async () => {\r\n    try {\r\n      dispatch({ type: GET_AN_ORDER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/order/order\", config);\r\n      dispatch({ type: GET_AN_ORDER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_AN_ORDER_FAIL,\r\n        payload: error.response ? error.response.data.msg : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getAllUsers = async () => {\r\n    try {\r\n      dispatch({ type: GET_ALL_USERS_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/users\", config);\r\n      dispatch({ type: GET_ALL_USERS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_ALL_USERS_FAIL,\r\n        payload: error.response ? error.response.data.msg : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (id) => {\r\n    try {\r\n      dispatch({ type: DELETE_USER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.delete(`/api/users/${id}`, config);\r\n      dispatch({ type: DELETE_USER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_USER_FAIL,\r\n        payload: error.response ? error.response.data.msg : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getAllOrders = async () => {\r\n    try {\r\n      dispatch({ type: GET_ALL_ORDERS_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\"/api/order\", config);\r\n      dispatch({ type: GET_ALL_ORDERS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_ALL_ORDERS_FAIL,\r\n        payload: error.response ? error.response.data.msg : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getUserandUpdate = async (id, email, name, isAdmin) => {\r\n    try {\r\n      dispatch({ type: UPDATE_USER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${state.user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/users/edit/${id}`,\r\n        { email, name, isAdmin },\r\n        config\r\n      );\r\n      dispatch({ type: UPDATE_USER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UPDATE_USER_FAIL,\r\n        payload: error.response ? error.response.data.msg : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        users: state.users,\r\n        loggedIn: state.loggedIn,\r\n        loading: state.loading,\r\n        errors: state.errors,\r\n        entered: state.entered,\r\n        paymentMethod: state.paymentMethod,\r\n        shippingAddress: state.shippingAddress,\r\n        order: state.order,\r\n        shippingPrice: state.shippingPrice,\r\n        taxPrice: state.taxPrice,\r\n        placed: state.placed,\r\n        success: state.success,\r\n        evaluating: state.evaluating,\r\n        orders: state.orders,\r\n        updateUser: state.updateUser,\r\n        getAllOrders,\r\n        getUserandUpdate,\r\n        deleteUser,\r\n        getAllUsers,\r\n        getOrders,\r\n        dispatch,\r\n        placeOrder,\r\n        loginUser,\r\n        logOut,\r\n        registerUser,\r\n        getProfile,\r\n        updateProfile,\r\n        saveShippingAddress,\r\n        setPayment,\r\n        getOrder,\r\n        payOrder,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\User\\userReducer.js",["272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"import {\r\n  LOGIN_FAIL,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  GET_PROFILE_REQUEST,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  GET_ALL_USERS_REQUEST,\r\n  GET_ALL_USERS_SUCCESS,\r\n  GET_ALL_USERS_FAIL,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_FAIL,\r\n  UPDATE_USER_FAIL,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_SUCCESS,\r\n} from \"../../constants/userConstants\";\r\nimport {\r\n  GET_ORDER_FAIL,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  PAY_ORDER_REQUEST,\r\n  PAY_ORDER_SUCCESS,\r\n  PAY_ORDER_FAIL,\r\n  PAY_ORDER_RESET,\r\n  PLACE_ORDER_FAIL,\r\n  PLACE_ORDER_REQUEST,\r\n  PLACE_ORDER_SUCCESS,\r\n  SET_PAYMENT_METHOD,\r\n  SHIPPING_ADDRESS,\r\n  GET_AN_ORDER_REQUEST,\r\n  GET_AN_ORDER_SUCCESS,\r\n  GET_AN_ORDER_FAIL,\r\n  GET_ALL_ORDERS_REQUEST,\r\n  GET_ALL_ORDERS_SUCCESS,\r\n  GET_ALL_ORDERS_FAIL,\r\n} from \"../../constants/orderConstants\";\r\n\r\nexport const userReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n        loggedIn: true,\r\n        token: action.payload.token,\r\n      };\r\n      break;\r\n\r\n    case LOGIN_FAIL:\r\n      localStorage.removeItem(\"userInfo\");\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        loggedIn: false,\r\n      };\r\n      break;\r\n\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"userInfo\");\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        loggedIn: false,\r\n        user: {},\r\n      };\r\n      break;\r\n\r\n    case REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        errors: false,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: false,\r\n        loggedIn: true,\r\n        user: action.payload,\r\n        token: action.payload.token,\r\n      };\r\n      break;\r\n\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem(\"userInfo\");\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: false,\r\n        errors: true,\r\n        error: action.payload,\r\n        user: {},\r\n      };\r\n      break;\r\n\r\n    case GET_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        user: {},\r\n        token: {},\r\n      };\r\n      break;\r\n    case GET_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n      break;\r\n    case GET_PROFILE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n    case UPDATE_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errors: false,\r\n      };\r\n      break;\r\n    case UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n        token: action.payload.token,\r\n        errors: false,\r\n      };\r\n      break;\r\n    case UPDATE_PROFILE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        errors: true,\r\n      };\r\n      break;\r\n\r\n    case PLACE_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        placed: false,\r\n      };\r\n      break;\r\n\r\n    case PLACE_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        order: action.payload,\r\n        placed: true,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        shippingAddress: action.payload,\r\n        entered: true,\r\n      };\r\n      break;\r\n\r\n    case PLACE_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        placed: false,\r\n      };\r\n      break;\r\n\r\n    case SET_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n      break;\r\n\r\n    case GET_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        evaluating: false,\r\n      };\r\n      break;\r\n\r\n    case GET_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        order: action.payload,\r\n        placed: true,\r\n        evaluating: true,\r\n      };\r\n      break;\r\n\r\n    case GET_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        evaluating: false,\r\n      };\r\n      break;\r\n\r\n    case PAY_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case PAY_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n      };\r\n      break;\r\n\r\n    case PAY_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n      break;\r\n\r\n    case PAY_ORDER_RESET:\r\n      return {};\r\n      break;\r\n\r\n    case GET_AN_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case GET_AN_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        orders: action.payload,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case GET_AN_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_USERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    case DELETE_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        evaluating: false,\r\n      };\r\n      break;\r\n\r\n    case DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        evaluating: true,\r\n      };\r\n      break;\r\n\r\n    case DELETE_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        evaluating: false,\r\n      };\r\n      break;\r\n\r\n    case UPDATE_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case UPDATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updateUser: action.payload,\r\n      };\r\n      break;\r\n\r\n    case UPDATE_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_ORDERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        orders: action.payload,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_ORDERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return {\r\n        state,\r\n      };\r\n      break;\r\n  }\r\n};\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\User\\UserContext.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\loginScreen.js",["313","314","315","316"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport UserContext from \"../contexts/User/UserContext\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\nimport { loginUser } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst LoginScreen = ({ match, history, location }) => {\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n\r\n  const { user, error, login, loggedIn } = userInfo;\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPass] = useState(\"\");\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  // const { email, password } = state;\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, loggedIn, redirect]);\r\n\r\n  const onEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onPass = (e) => {\r\n    setPass(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    dispatch(loginUser(email, password));\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Meta content='Login Page' title='Login' />\r\n\r\n      <form onSubmit={onSubmit} className='my-4'>\r\n        <h3>Log in</h3>\r\n        {error && <Message variant='danger' message={error} />}\r\n        <div className='form-group'>\r\n          <label>Email</label>\r\n          <input\r\n            type='email'\r\n            value={email}\r\n            className='form-control'\r\n            placeholder='Enter email'\r\n            onChange={onEmail}\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>Password</label>\r\n          <input\r\n            type='password'\r\n            value={password}\r\n            className='form-control'\r\n            placeholder='Enter password'\r\n            onChange={onPass}\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' value='Sign In' className='btn btn-dark'></input>\r\n\r\n        <span className='mx-4'>\r\n          New to ProShop{\" \"}\r\n          <Link to={`/register?redirect=${redirect}`}>Register</Link>\r\n        </span>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\RegisterScreen.js",["317","318","319"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  const { user, loggedIn, errors, error, loading } = userInfo;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPass] = useState(\"\");\r\n  const [passwordConfirm, setConf] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    dispatch(registerUser(email, password, name, passwordConfirm));\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, loggedIn, error]);\r\n  return (\r\n    <FormContainer>\r\n      <Meta content='Register Page' title='Register an account' />\r\n\r\n      <form onSubmit={onSubmit} className='my-2'>\r\n        <h3>Register</h3>\r\n        {errors && <Message variant='danger' message={error} />}\r\n        <div className='form-group'>\r\n          <label>Name</label>\r\n          <input\r\n            type='name'\r\n            className='form-control'\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n            placeholder='First name'\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>Email</label>\r\n          <input\r\n            type='email'\r\n            className='form-control'\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            placeholder='Enter email'\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>Password</label>\r\n          <input\r\n            type='password'\r\n            value={password}\r\n            onChange={(e) => setPass(e.target.value)}\r\n            className='form-control'\r\n            placeholder='Enter password'\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type='password'\r\n            onChange={(e) => setConf(e.target.value)}\r\n            value={passwordConfirm}\r\n            className='form-control'\r\n            placeholder='Confirm your password'\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' value='Register' className='btn btn-dark'></input>\r\n        <p className='forgot-password text-right'>\r\n          Already registered <Link to='/login'>log in?</Link>\r\n        </p>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ProfileScreen.js",["320","321"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Col, Table, Button, Row } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport UserContext from \"../contexts/User/UserContext\";\r\nimport { updateProfile, getProfile } from \"../actions/userActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { getOrders } from \"../actions/orderActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ProfileScreen = ({ history, match }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPass] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const profileReducer = useSelector((state) => state.profileReducer);\r\n  const { user } = profileReducer;\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  const ordersInfo = useSelector((state) => state.ordersInfo);\r\n  const updateReducer = useSelector((state) => state.updateReducer);\r\n  const { success, errors, error } = updateReducer;\r\n  const { orders } = ordersInfo;\r\n  const { loggedIn } = userInfo;\r\n\r\n  useEffect(() => {\r\n    if (!loggedIn) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getOrders());\r\n      if (!user.name) {\r\n        dispatch(getProfile(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, dispatch, user.name, user.email, loggedIn]);\r\n\r\n  const onSubmit = (e) => {\r\n    dispatch(updateProfile(email, password, name));\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Row className='my-3'>\r\n      <Meta content='Orders Page' title={`${user.name}'s Profile`} />\r\n\r\n      <Col md={3}>\r\n        <form onSubmit={onSubmit}>\r\n          <h3>Update</h3>\r\n          {errors && <Message variant='danger' message={error} />}\r\n          {success && <Message variant='success' message='User Updated' />}\r\n          <div className='form-group'>\r\n            <label>Name</label>\r\n            <input\r\n              type='name'\r\n              className='form-control'\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n              placeholder='Name'\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Email</label>\r\n            <input\r\n              type='email'\r\n              className='form-control'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              placeholder='Enter email'\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Password</label>\r\n            <input\r\n              type='password'\r\n              value={password}\r\n              onChange={(e) => setPass(e.target.value)}\r\n              className='form-control'\r\n              placeholder='Enter Password'\r\n            />\r\n          </div>\r\n\r\n          {/* <div className='form-group'>\r\n            <label>Confirm Password</label>\r\n            <input\r\n              type='password'\r\n              onChange={(e) => setConf(e.target.value)}\r\n              value={passwordConfirm}\r\n              className='form-control'\r\n              placeholder='Confirm your password'\r\n            />\r\n          </div> */}\r\n\r\n          <input type='submit' value='Update' className='btn btn-dark'></input>\r\n        </form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button className='btn-sm' variant='light'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Order\\OrderState.js",["322"],"import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport OrderContext from \"./orderContext\";\r\nimport orderReducer from \"./orderReducer\";\r\nimport UserContext from \"../User/UserContext\";\r\nimport axios from \"axios\";\r\nimport {\r\n  PLACE_ORDER_SUCCESS,\r\n  PLACE_ORDER_REQUEST,\r\n  PLACE_ORDER_FAIL,\r\n} from \"../../constants/orderConstants\";\r\n\r\nconst OrderState = (props) => {\r\n  const initialState = {\r\n    shippingAddress: {},\r\n    entered: false,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(orderReducer, initialState);\r\n\r\n  //   useEffect(() => {\r\n  //\r\n  //   }, [state]);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const { user } = userContext;\r\n  const saveShippingAddress = async (\r\n    name,\r\n    country,\r\n    city,\r\n    postalCode,\r\n    address\r\n  ) => {\r\n    try {\r\n      dispatch({ type: PLACE_ORDER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/address\",\r\n        { name, country, city, postalCode, address },\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PLACE_ORDER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PLACE_ORDER_FAIL,\r\n        payload: error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.response,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OrderContext.Provider\r\n      value={{\r\n        shippingAddress: state.shippingAddress,\r\n        entered: state.entered,\r\n        saveShippingAddress,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderState;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Order\\orderReducer.js",["323","324"],"import {\r\n  PLACE_ORDER_FAIL,\r\n  PLACE_ORDER_REQUEST,\r\n  PLACE_ORDER_SUCCESS,\r\n} from \"../../constants/orderConstants\";\r\n\r\nconst orderReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case PLACE_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case PLACE_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n        entered: true,\r\n      };\r\n\r\n    case PLACE_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        entered: false,\r\n        error: action.payload,\r\n      };\r\n\r\n      break;\r\n\r\n    default:\r\n      return {\r\n        state,\r\n      };\r\n      break;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\constants\\orderConstants.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Order\\orderContext.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ShippingScreen.js",["325","326","327"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveShippingAddress } from \"../actions/orderActions\";\r\nimport UserContext from \"../contexts/User/UserContext\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const address1 = useSelector((state) => state.address1);\r\n  const { shippingAddress, entered } = address1;\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAdd] = useState(\"\");\r\n  const [country, setCount] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [postalCode, setPostal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (entered) {\r\n      setName(shippingAddress.name);\r\n      setCount(shippingAddress.country);\r\n      setAdd(shippingAddress.address);\r\n      setCity(shippingAddress.city);\r\n      setPostal(shippingAddress.postalCode);\r\n    }\r\n  }, [entered]);\r\n  const onSubmit = (e) => {\r\n    dispatch(saveShippingAddress(name, address, country, city, postalCode));\r\n    history.push(\"/payment\");\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Meta content='Orders Page' title='Enter your Shipping Address' />\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <h3 className='my-3'>Shipping Address</h3>\r\n        {/* {error && <Message variant='danger' message={error} />} */}\r\n        <div className='form-group'>\r\n          <label>Full Name</label>\r\n          <input\r\n            type='name'\r\n            value={name}\r\n            className='form-control'\r\n            placeholder='Full Name'\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>Address</label>\r\n          <input\r\n            type='address'\r\n            value={address}\r\n            className='form-control'\r\n            placeholder='Address'\r\n            onChange={(e) => setAdd(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>Country</label>\r\n          <input\r\n            type='country'\r\n            value={country}\r\n            className='form-control'\r\n            placeholder='Country'\r\n            onChange={(e) => setCount(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>City</label>\r\n          <input\r\n            type='state'\r\n            value={city}\r\n            className='form-control'\r\n            placeholder='City'\r\n            onChange={(e) => setCity(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>Postal Code</label>\r\n          <input\r\n            type='postalCode'\r\n            value={postalCode}\r\n            className='form-control'\r\n            placeholder='Zip or Postal Code'\r\n            onChange={(e) => setPostal(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' value='Next' className='btn btn-dark'></input>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Product\\productContext.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Product\\productState.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\contexts\\Product\\productListReducer.js",["328","329","330"],"import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_SCREEN_REQUEST,\r\n  PRODUCT_SCREEN_SUCCESS,\r\n  PRODUCT_SCREEN_FAIL,\r\n} from \"../../constants/productConstants\";\r\n\r\nexport const productListReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        products: action.payload,\r\n      };\r\n      break;\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    case PRODUCT_SCREEN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        product: {},\r\n      };\r\n\r\n    case PRODUCT_SCREEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        product: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case PRODUCT_SCREEN_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        product: {},\r\n        loading: false,\r\n      };\r\n    default:\r\n      return {\r\n        state,\r\n      };\r\n  }\r\n};\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\PaymentScreen.js",["331","332","333","334","335"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setPayment } from \"../actions/orderActions\";\r\nimport UserContext from \"../contexts/User/UserContext\";\r\nimport axios from \"axios\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const payment1 = useSelector((state) => state.payment1);\r\n  const { paymentMethod } = payment1;\r\n  const [payment, setPaymentMethod] = useState(\"PayBal\");\r\n\r\n  const onSubmit = (e) => {\r\n    dispatch(setPayment(payment));\r\n    history.push(\"/placeOrder\");\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <Meta content='Orders Page' title='Choose your Payment Method' />\r\n\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\FormContainer.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\PlaceOrderScreen.js",["336"],"import React, { useEffect } from \"react\";\r\nimport { PLACE_ORDER_RESET } from \"../constants/orderConstants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { placeOrder, getOrder } from \"../actions/orderActions\";\r\nimport { ListGroup, Col, Row, Button, Card, Image } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const order1 = useSelector((state) => state.order1);\r\n  const payment1 = useSelector((state) => state.payment1);\r\n  const address1 = useSelector((state) => state.address1);\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  const { paymentMethod } = payment1;\r\n  const { shippingAddress } = address1;\r\n  const { order, shippingPrice, taxPrice, placed } = order1;\r\n  // const {\r\n  //   shippingAddress,\r\n  //   paymentMethod,\r\n  //   loggedIn,\r\n  //   entered,\r\n  //   placeOrder,\r\n  //   taxPrice,\r\n  //   shippingPrice,\r\n  //   placed,\r\n  //   order,\r\n  //   getOrder,\r\n  // } = userContext;\r\n\r\n  useEffect(() => {\r\n    if (placed) {\r\n      history.push(`/order/${order.id}`);\r\n      dispatch({ type: PLACE_ORDER_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, dispatch, placed]);\r\n\r\n  const onClick = (e) => {\r\n    dispatch(\r\n      placeOrder({\r\n        shippingAddress,\r\n        paymentMethod,\r\n        taxPrice,\r\n        shippingPrice,\r\n        totalPrice: cartItems\r\n          .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n          .toFixed(2),\r\n        orderItems: cartItems,\r\n      })\r\n    );\r\n\r\n    // history.push(`/order/${order.id}`);\r\n\r\n    e.preventDefault();\r\n  };\r\n  //   const paymentMethod = null;\r\n  //   const { cartItems } = cartContext;\r\n  return (\r\n    <>\r\n      {/* <CheckoutSteps step1 step2 step3 step4 /> */}\r\n      <Row>\r\n        <Meta content='Orders Page' title='Place your Order' />\r\n\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {shippingAddress.address}, {shippingAddress.city}{\" \"}\r\n                {shippingAddress.postalCode}, {shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cartItems.length === 0 ? (\r\n                <h1>Your cart is empty</h1>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>\r\n                    ({cartItems.reduce((acc, item) => item.qty + acc, 0)})\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>\r\n                    $\r\n                    {cartItems\r\n                      .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                      .toFixed(2)}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {/* {error && <Message variant='danger'>{error}</Message>} */}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={onClick}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\OrderScreen.js",["337","338","339","340","341","342"],"import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, Row, Col, Button, Image, Card } from \"react-bootstrap\";\r\nimport UserContext from \"../contexts/User/UserContext\";\r\nimport Message from \"../components/Message\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getOrder,\r\n  payOrderWithPaypal,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { CircleLoading } from \"react-loadingg\";\r\nimport {\r\n  PAY_ORDER_RESET,\r\n  ORDER_DELIVER_RESET,\r\n  PAY_ORDER_PAYPAL_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const payAnOrder = useSelector((state) => state.payAnOrder);\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const userInfo2 = useSelector((state) => state.userInfo);\r\n  const payWithPaypal = useSelector((state) => state.payWithPaypal);\r\n  const { successPaypal, loadingPaypal } = payWithPaypal;\r\n  const { delivered, loadingDeliver } = orderDeliver;\r\n  const { user: userDetails } = userInfo2;\r\n  const [sdkReady, setSdkReady] = useState(true);\r\n  // const order1 = useSelector((state) => state.order1);\r\n  const { success } = payAnOrder;\r\n  const { order, user, shippingAddress, orderItems, loading } = orderDetails;\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=AXZjkziMbFWlprZi6HpEdBuF_L__AIDDzwzOCtRlC8i4vEpMIr815MH354s-YIp0Ze7FE2qh9N4LbaiF`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    if (\r\n      !order._id ||\r\n      success ||\r\n      successPaypal ||\r\n      delivered ||\r\n      order._id !== match.params.id\r\n    ) {\r\n      dispatch({ type: PAY_ORDER_PAYPAL_RESET });\r\n      dispatch({ type: PAY_ORDER_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrder(match.params.id));\r\n    } else if (order.paymentMethod === \"PayPal\") {\r\n      addPayPalScript();\r\n    } else {\r\n      setSdkReady(true);\r\n    }\r\n  }, [dispatch, match, order._id, successPaypal, success, delivered]);\r\n\r\n  const handleToken = (token, addresses) => {\r\n    dispatch(payOrder(match.params.id, token));\r\n  };\r\n\r\n  const onSuccess = (paymentResult) => {\r\n    dispatch(payOrderWithPaypal(match.params.id, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = (e) => {\r\n    dispatch(deliverOrder(match.params.id));\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <CircleLoading />\r\n      ) : (\r\n        <>\r\n          <Meta content='Orders Page' title={`Order ${match.params.id}`} />\r\n          <h1>Order ({order._id})</h1>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name: {user.name} </strong>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email:</strong>{\" \"}\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address:</strong>\r\n                    {shippingAddress.address}, {shippingAddress.city}{\" \"}\r\n                    {shippingAddress.postalCode}, {shippingAddress.country}\r\n                  </p>\r\n                  {order.isDelivered ? (\r\n                    <Message\r\n                      variant='success'\r\n                      message={`Delivered on ${order.deliveredAt.substring(\r\n                        0,\r\n                        10\r\n                      )}`}\r\n                    />\r\n                  ) : (\r\n                    <Message variant='danger' message='Not Delivered' />\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong>\r\n                    {order.paymentMethod}\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message\r\n                      variant='success'\r\n                      message={`Paid At ${order.paidAt.substring(0, 10)}`}\r\n                    />\r\n                  ) : (\r\n                    <Message variant='danger' message='Not Paid' />\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Order Items</h2>\r\n\r\n                  <ListGroup variant='flush'>\r\n                    {orderItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>{item.name}</Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>\r\n                        ({orderItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>${order.shippingPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>${order.taxPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {!order.isPaid && (\r\n                    <ListGroup.Item>\r\n                      {order.paymentMethod === \"Stripe\" ? (\r\n                        <StripeCheckout\r\n                          stripeKey='pk_test_51I0lA3D0OfQEoW0jd4RvuU2jgaW8wXW9YJ4irxc4KOkmUbaQlHyCjD5EeJKc5Nst39PS2w8QHyN1xhbS9AQVzNaR0080YjGcqH'\r\n                          token={handleToken}\r\n                          amount={order.totalPrice * 100}\r\n                        />\r\n                      ) : (\r\n                        <PayPalButton\r\n                          amount={order.totalPrice}\r\n                          onSuccess={onSuccess}\r\n                        ></PayPalButton>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  {loadingDeliver && <CircleLoading />}\r\n                  {userDetails &&\r\n                    userDetails.isAdmin &&\r\n                    order.isPaid &&\r\n                    !order.isDelivered && (\r\n                      <ListGroup.Item>\r\n                        <Button\r\n                          type='button'\r\n                          className='btn btn-block'\r\n                          onClick={deliverHandler}\r\n                        >\r\n                          Mark As Delivered\r\n                        </Button>\r\n                      </ListGroup.Item>\r\n                    )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>{\" \"}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\UserListScreen.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\UserEditScreen.js",["343","344"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport UserContext from \"../contexts/User/UserContext\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userContext = useContext(UserContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const { updateUser, getUserandUpdate, user, error } = userContext;\r\n\r\n  useEffect(() => {\r\n    if (!user.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    getUserandUpdate(match.params.id);\r\n    // setName(updateUser.name);\r\n    // setEmail(updateUser.email);\r\n    // setIsAdmin(updateUser.isAdmin);\r\n\r\n    // eslint-disable-next-line\r\n  }, [match, history, user]);\r\n\r\n  const onEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    getUserandUpdate(match.params.id, email, name, isAdmin);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <form onSubmit={onSubmit} className='my-4'>\r\n        <h3>Update</h3>\r\n        {error && <Message variant='danger' message={error} />}\r\n        <div className='form-group'>\r\n          <label>Email</label>\r\n          <input\r\n            type='email'\r\n            value={email}\r\n            className='form-control'\r\n            placeholder='Enter new email'\r\n            onChange={onEmail}\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>Name</label>\r\n          <input\r\n            type='name'\r\n            value={name}\r\n            className='form-control'\r\n            placeholder='Enter new name'\r\n            onChange={onName}\r\n          />\r\n        </div>\r\n\r\n        <Form.Check\r\n          type='radio'\r\n          label='Is Admin'\r\n          name='paymentMethod'\r\n          checked={isAdmin}\r\n          onChange={(e) => setIsAdmin(e.target.checked)}\r\n        ></Form.Check>\r\n\r\n        <input type='submit' value='Update' className='btn btn-dark'></input>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\OrdersAdminScreen.js",["345","346","347"],"import React, { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllOrders } from \"../actions/orderActions\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport UserContext from \"../contexts/User/UserContext\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst OrdersAdminScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const usersOrders = useSelector((state) => state.usersOrders);\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n\r\n  const { user } = userInfo;\r\n\r\n  const { allOrders } = usersOrders;\r\n\r\n  useEffect(() => {\r\n    if (user.isAdmin) {\r\n      dispatch(getAllOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, user]);\r\n  return (\r\n    <>\r\n      <Meta content='Orders Page' title='Recent Orders' />\r\n      <table class='table my-3'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>ID</th>\r\n            <th scope='col'>DATE</th>\r\n            <th scope='col'>TOTAL</th>\r\n            <th scope='col'>PAID</th>\r\n            <th scope='col'>DELIVERED</th>\r\n            <th scope='col'>NAME</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allOrders.map((order) => (\r\n            <tr>\r\n              <LinkContainer to={`/order/${order._id}`}>\r\n                <th scope='row'>\r\n                  <Link to={`/order/${order._id}`}>{order._id}</Link>\r\n                </th>\r\n              </LinkContainer>\r\n              <td>{order.createdAt.substring(0, 10)}</td>\r\n              <td>{order.totalPrice}</td>\r\n              <td>\r\n                {order.paidAt ? (\r\n                  order.paidAt.substring(0, 10)\r\n                ) : (\r\n                  <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                )}\r\n              </td>\r\n              <td>\r\n                {order.isDelivered ? (\r\n                  <i className='fas fa-check' style={{ color: \"green\" }}></i>\r\n                ) : (\r\n                  <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                )}\r\n              </td>\r\n              <td>{order.user.name}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrdersAdminScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\reducers\\productListReducer.js",["348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_ADMIN_REQUEST,\r\n  PRODUCT_LIST_ADMIN_SUCCESS,\r\n  PRODUCT_LIST_ADMIN_FAIL,\r\n  PRODUCT_SCREEN_REQUEST,\r\n  PRODUCT_SCREEN_SUCCESS,\r\n  PRODUCT_SCREEN_FAIL,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  CREATE_PRODUCT_REQUEST,\r\n  CREATE_PRODUCT_FAIL,\r\n  CREATE_PRODUCT_SUCCESS,\r\n  CREATE_PRODUCT_RESET,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_RESET,\r\n  REVIEW_PRODUCT_REQUEST,\r\n  REVIEW_PRODUCT_FAIL,\r\n  REVIEW_PRODUCT_SUCCESS,\r\n  TOP_PRODUCTS_REQUEST,\r\n  TOP_PRODUCTS_FAIL,\r\n  TOP_PRODUCTS_SUCCESS,\r\n  REVIEW_PRODUCT_RESET,\r\n} from \"../constants/productConstants\";\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n      break;\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload,\r\n      };\r\n      break;\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReducer = (\r\n  state = { product: {}, reviews: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_SCREEN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        product: {},\r\n        reviews: [],\r\n      };\r\n\r\n    case PRODUCT_SCREEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        product: action.payload,\r\n        loading: false,\r\n        reviews: action.payload.reviews,\r\n      };\r\n\r\n    case PRODUCT_SCREEN_FAIL:\r\n      return {\r\n        error: action.payload,\r\n        product: {},\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteProductReducer = (\r\n  state = { allProducts: [], deleted: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case DELETE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        deleted: false,\r\n      };\r\n      break;\r\n\r\n    case DELETE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        deleted: true,\r\n        allProducts: action.payload,\r\n      };\r\n      break;\r\n\r\n    case DELETE_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        deleted: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n\r\nexport const productListAdminReducer = (\r\n  state = { allProducts: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_ADMIN_REQUEST:\r\n      return {\r\n        loading: true,\r\n        allProducts: [],\r\n      };\r\n      break;\r\n    case PRODUCT_LIST_ADMIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        allProducts: action.payload,\r\n      };\r\n      break;\r\n\r\n    case PRODUCT_LIST_ADMIN_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createProductReducer = (\r\n  state = { created: false, createdProduct: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CREATE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        created: false,\r\n      };\r\n      break;\r\n\r\n    case CREATE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        created: true,\r\n        createdproduct: action.payload,\r\n        id: action.payload._id,\r\n      };\r\n      break;\r\n\r\n    case CREATE_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        created: false,\r\n      };\r\n\r\n    case CREATE_PRODUCT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n\r\nexport const updateProductReducer = (state = { updated: false }, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        updated: false,\r\n      };\r\n      break;\r\n\r\n    case UPDATE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updated: true,\r\n      };\r\n      break;\r\n\r\n    case UPDATE_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updated: false,\r\n      };\r\n\r\n    case UPDATE_PRODUCT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n\r\nexport const reviewProductReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case REVIEW_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingProductReview: true,\r\n      };\r\n      break;\r\n\r\n    case REVIEW_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loadingProductReview: false,\r\n        successProductReview: true,\r\n      };\r\n      break;\r\n\r\n    case REVIEW_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        loadingProductReview: false,\r\n        errorProductReview: action.payload,\r\n        successProductReview: false,\r\n      };\r\n\r\n    case REVIEW_PRODUCT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n\r\nexport const topProductsReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case TOP_PRODUCTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingProducts: true,\r\n      };\r\n      break;\r\n\r\n    case TOP_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        products: action.payload.products,\r\n      };\r\n      break;\r\n\r\n    case TOP_PRODUCTS_FAIL:\r\n      return {\r\n        ...state,\r\n        loadingProducts: false,\r\n        errorProducts: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\reducers\\cartReducer.js",["369"],"import React from \"react\";\r\nimport { ADD_ITEMS, REMOVE_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case ADD_ITEMS:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n\r\n    case REMOVE_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (item) => action.payload !== item.product\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\actions\\cartActions.js",["370"],"import {\r\n  ADD_ITEMS,\r\n  ADD_IEMS_FAIL,\r\n  REMOVE_ITEMS,\r\n} from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}?qty=${qty}`);\r\n\r\n  dispatch({\r\n    type: ADD_ITEMS,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      price: data.price,\r\n      image: data.image,\r\n      countInStock: data.countInStock,\r\n      qty: Number(qty),\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cartInfo\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeItem = (id) => (dispatch) => {\r\n  dispatch({ type: REMOVE_ITEMS, payload: id });\r\n};\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\reducers\\userReducers.js",["371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import {\r\n  LOGIN_FAIL,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  GET_PROFILE_REQUEST,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  GET_ALL_USERS_REQUEST,\r\n  GET_ALL_USERS_SUCCESS,\r\n  GET_ALL_USERS_FAIL,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_FAIL,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n        loggedIn: true,\r\n        token: action.payload.token,\r\n      };\r\n      break;\r\n\r\n    case LOGIN_FAIL:\r\n      localStorage.removeItem(\"userInfo\");\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        loggedIn: false,\r\n      };\r\n      break;\r\n\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"userInfo\");\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        loggedIn: false,\r\n        user: {},\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const registerUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        errors: false,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: false,\r\n        loggedIn: true,\r\n        user: action.payload,\r\n        token: action.payload.token,\r\n      };\r\n      break;\r\n\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem(\"userInfo\");\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: false,\r\n        errors: true,\r\n        error: action.payload,\r\n        user: {},\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errors: false,\r\n        success: false,\r\n      };\r\n      break;\r\n    case UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: action.payload,\r\n        loggedIn: true,\r\n        errors: false,\r\n        success: true,\r\n      };\r\n      break;\r\n    case UPDATE_PROFILE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n        errors: true,\r\n        success: false,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProfileReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case GET_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        user: {},\r\n        token: {},\r\n      };\r\n      break;\r\n    case GET_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n      break;\r\n    case GET_PROFILE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\actions\\userActions.js",["394","395","396","397","398","399","400","401","402"],"import {\r\n  LOGIN_FAIL,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  GET_PROFILE_REQUEST,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  GET_ALL_USERS_REQUEST,\r\n  GET_ALL_USERS_SUCCESS,\r\n  GET_ALL_USERS_FAIL,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_FAIL,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const loginUser = (email, password) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response.data.msg\r\n        ? error.response.data.msg\r\n        : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const registerUser = (email, password, name, passwordConfirm) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    dispatch({ type: REGISTER_REQUEST });\r\n    const { data } = await axios.post(\r\n      \"/api/users/register\",\r\n      { email, password, name, passwordConfirm },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: REGISTER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: error.response.data.msg\r\n        ? error.response.data.msg\r\n        : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\nexport const getProfile = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_PROFILE_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({ type: GET_PROFILE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    dispatch({\r\n      type: GET_PROFILE_FAIL,\r\n      payload: error.response.data.msg\r\n        ? error.response.data.msg\r\n        : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (email, password, name) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PROFILE_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      \"/api/users/profile\",\r\n      { email, name, password },\r\n      config\r\n    );\r\n    dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    dispatch({\r\n      type: UPDATE_PROFILE_FAIL,\r\n      payload: error.response.data.msg\r\n        ? error.response.data.msg\r\n        : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\reducers\\orderReducer.js",["403","404","405","406","407","408","409","410","411","412"],"import {\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_FAIL,\r\n  GET_ORDER_RESET,\r\n  PAY_ORDER_REQUEST,\r\n  PAY_ORDER_SUCCESS,\r\n  PAY_ORDER_FAIL,\r\n  PAY_ORDER_RESET,\r\n  PLACE_ORDER_FAIL,\r\n  PLACE_ORDER_REQUEST,\r\n  PLACE_ORDER_SUCCESS,\r\n  PLACE_ORDER_RESET,\r\n  SET_PAYMENT_METHOD,\r\n  SHIPPING_ADDRESS,\r\n  GET_AN_ORDER_REQUEST,\r\n  GET_AN_ORDER_SUCCESS,\r\n  GET_AN_ORDER_FAIL,\r\n  GET_ALL_ORDERS_REQUEST,\r\n  GET_ALL_ORDERS_SUCCESS,\r\n  GET_ALL_ORDERS_FAIL,\r\n  GET_ALL_ORDERS_RESET,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n  PAY_ORDER_PAYPAL_REQUEST,\r\n  PAY_ORDER_PAYPAL_FAIL,\r\n  PAY_ORDER_PAYPAL_SUCCESS,\r\n  PAY_ORDER_PAYPAL_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const shippingAddressReducer = (\r\n  state = { shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        shippingAddress: action.payload,\r\n        entered: true,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n\r\nexport const paymentMethodReducer = (\r\n  state = { paymentMethod: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SET_PAYMENT_METHOD:\r\n      return {\r\n        paymentMethod: action.payload,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n\r\nexport const placeOrderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PLACE_ORDER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case PLACE_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        placed: true,\r\n        order: action.payload,\r\n      };\r\n    case PLACE_ORDER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case PLACE_ORDER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOrderReducer = (\r\n  state = { user: {}, shippingAddress: {}, order: {}, orderItems: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        order: {},\r\n        loading: true,\r\n      };\r\n    case GET_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        order: action.payload,\r\n        user: action.payload.user,\r\n        shippingAddress: action.payload.shippingAddress,\r\n        orderItems: action.payload.orderItems,\r\n      };\r\n    case GET_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case GET_ORDER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const payOrderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PAY_ORDER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case PAY_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case PAY_ORDER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case PAY_ORDER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getAllOrdersReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_AN_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case GET_AN_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        orders: action.payload,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case GET_AN_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getAllUsersOrdersReducer = (state = { allOrders: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_ORDERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allOrders: action.payload,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_ORDERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      break;\r\n\r\n    case GET_ALL_ORDERS_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingDeliver: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loadingDeliver: false,\r\n        delivered: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        ...state,\r\n        loadingDeliver: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const payWithPaypalReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PAY_ORDER_PAYPAL_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingPaypal: true,\r\n        successPaypal: false,\r\n      };\r\n    case PAY_ORDER_PAYPAL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        successPaypal: true,\r\n        loadingPaypal: false,\r\n        order: action.payload,\r\n      };\r\n    case PAY_ORDER_PAYPAL_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        successPaypal: true,\r\n        loadingPaypal: false,\r\n      };\r\n    case PAY_ORDER_PAYPAL_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// export const orderListMyReducer = (state = { orders: [] }, action) => {\r\n//   switch (action.type) {\r\n//     case ORDER_LIST_MY_REQUEST:\r\n//       return {\r\n//         loading: true,\r\n//       };\r\n//     case ORDER_LIST_MY_SUCCESS:\r\n//       return {\r\n//         loading: false,\r\n//         orders: action.payload,\r\n//       };\r\n//     case ORDER_LIST_MY_FAIL:\r\n//       return {\r\n//         loading: false,\r\n//         error: action.payload,\r\n//       };\r\n//     case ORDER_LIST_MY_RESET:\r\n//       return { orders: [] };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const orderListReducer = (state = { orders: [] }, action) => {\r\n//   switch (action.type) {\r\n//     case ORDER_LIST_REQUEST:\r\n//       return {\r\n//         loading: true,\r\n//       };\r\n//     case ORDER_LIST_SUCCESS:\r\n//       return {\r\n//         loading: false,\r\n//         orders: action.payload,\r\n//       };\r\n//     case ORDER_LIST_FAIL:\r\n//       return {\r\n//         loading: false,\r\n//         error: action.payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\actions\\orderActions.js",["413"],"import {\r\n  GET_ORDER_FAIL,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  PAY_ORDER_REQUEST,\r\n  PAY_ORDER_SUCCESS,\r\n  PAY_ORDER_FAIL,\r\n  PAY_ORDER_RESET,\r\n  PLACE_ORDER_FAIL,\r\n  PLACE_ORDER_REQUEST,\r\n  PLACE_ORDER_SUCCESS,\r\n  SET_PAYMENT_METHOD,\r\n  SHIPPING_ADDRESS,\r\n  GET_AN_ORDER_REQUEST,\r\n  GET_AN_ORDER_SUCCESS,\r\n  GET_AN_ORDER_FAIL,\r\n  GET_ALL_ORDERS_REQUEST,\r\n  GET_ALL_ORDERS_SUCCESS,\r\n  GET_ALL_ORDERS_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  PAY_ORDER_PAYPAL_REQUEST,\r\n  PAY_ORDER_PAYPAL_FAIL,\r\n  PAY_ORDER_PAYPAL_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const saveShippingAddress = (\r\n  name,\r\n  address,\r\n  country,\r\n  city,\r\n  postalCode\r\n) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: SHIPPING_ADDRESS,\r\n    payload: { name, address, country, city, postalCode },\r\n  });\r\n  localStorage.setItem(\r\n    \"shippingAddress\",\r\n    JSON.stringify({ name, address, country, city, postalCode })\r\n  );\r\n};\r\n\r\nexport const setPayment = (data) => (dispatch) => {\r\n  dispatch({ type: SET_PAYMENT_METHOD, payload: data });\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n\r\nexport const placeOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PLACE_ORDER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/order\", order, config);\r\n    dispatch({ type: PLACE_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    dispatch({\r\n      type: PLACE_ORDER_FAIL,\r\n      payload: error.response ? error.response.data.msg : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrder = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_ORDER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/order/${id}`, config);\r\n    dispatch({ type: GET_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    dispatch({\r\n      type: GET_ORDER_FAIL,\r\n      payload: error.response ? error.response.data.msg : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (id, token) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PAY_ORDER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/order/${id}/pay`, { token }, config);\r\n    dispatch({ type: PAY_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    dispatch({\r\n      type: PAY_ORDER_FAIL,\r\n      payload: error.response ? error.response.data.msg : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrderWithPaypal = (id, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: PAY_ORDER_PAYPAL_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/order/${id}/paywithpaypal`,\r\n      { paymentResult },\r\n      config\r\n    );\r\n    dispatch({ type: PAY_ORDER_PAYPAL_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    dispatch({\r\n      type: PAY_ORDER_PAYPAL_FAIL,\r\n      payload: error.response ? error.response.data.msg : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_AN_ORDER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/order/order\", config);\r\n    dispatch({ type: GET_AN_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_AN_ORDER_FAIL,\r\n      payload: error.response ? error.response.data.msg : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_ALL_ORDERS_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/order\", config);\r\n    dispatch({ type: GET_ALL_ORDERS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ALL_ORDERS_FAIL,\r\n      payload: error.response ? error.response.data.msg : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELIVER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${getState().userInfo.user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/order/${id}/deliver`, config);\r\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: error.response ? error.response.data.msg : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ProductAdminScreen.js",["414","415","416"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { deleteProductAction } from \"../actions/productActions\";\r\nimport {\r\n  productActions,\r\n  createProductAction,\r\n  productAdminActions,\r\n} from \"../actions/productActions\";\r\nimport { CREATE_PRODUCT_RESET } from \"../constants/productConstants\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ProductAdminScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const productListAdmin = useSelector((state) => state.productListAdmin);\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  const createProduct = useSelector((state) => state.createProduct);\r\n  const { created, createdProduct, id } = createProduct;\r\n  const deleteProduct = useSelector((state) => state.deleteProduct);\r\n  const { deleted, loading: deleteLoading } = deleteProduct;\r\n  const { user } = userInfo;\r\n  const { allProducts: products } = productListAdmin;\r\n\r\n  useEffect(() => {\r\n    if (!user.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(productAdminActions());\r\n    }\r\n    if (created) {\r\n      history.push(`/admin/product/${id}/edit`);\r\n      dispatch({ type: CREATE_PRODUCT_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, history, user, created, deleted]);\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteProductAction(id));\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    dispatch(createProductAction());\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <Meta content='Orders Page' title='All Products' />\r\n\r\n      <div className='d-flex my-4 align-items-center justify-content-between'>\r\n        <h1>PRODUCTS</h1>\r\n        <Button onClick={onClick} className='btn btn-dark'>\r\n          <i class='fas fa-plus mx-1'></i> Create Product\r\n        </Button>\r\n      </div>\r\n      <table class='table'>\r\n        <thead class='thead'>\r\n          <tr>\r\n            <th scope='col'>ID</th>\r\n            <th scope='col'>NAME</th>\r\n            <th scope='col'>STOCK</th>\r\n            <th scope='col'>PRICE</th>\r\n            <th scope='col'>BRAND</th>\r\n            <th scope='col'>EDIT/DELETE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) => (\r\n            <tr>\r\n              <LinkContainer to={`/product/${product.id}`}>\r\n                <th scope='row'>\r\n                  <Link to={`/product/${product._id}`}>{product._id}</Link>\r\n                </th>\r\n              </LinkContainer>\r\n              <td>{product.name}</td>\r\n              {product.countInStock === 0 ? (\r\n                <td>\r\n                  <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                </td>\r\n              ) : (\r\n                <td>{product.countInStock}</td>\r\n              )}\r\n              <td>${product.price}</td>\r\n              <td>{product.brand}</td>\r\n              <td>\r\n                {\" \"}\r\n                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                  <Button variant='light' className='btn-sm'>\r\n                    <i className='fas fa-edit'></i>\r\n                  </Button>\r\n                </LinkContainer>\r\n                <Button\r\n                  variant='danger'\r\n                  className='btn-sm'\r\n                  onClick={() => deleteHandler(product._id)}\r\n                >\r\n                  <i className='fas fa-trash'></i>\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductAdminScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\Screens\\ProductEditScreen.js",["417"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getProduct, updateProductAction } from \"../actions/productActions\";\r\nimport { UPDATE_PRODUCT_RESET } from \"../constants/productConstants\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  const indProduct = useSelector((state) => state.indProduct);\r\n  const updateProduct = useSelector((state) => state.updateProduct);\r\n  const { updated } = updateProduct;\r\n  const { product } = indProduct;\r\n  const { user } = userInfo;\r\n  const [inStock, setInStock] = useState(0);\r\n  const [price, setPrice] = useState(0);\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDesc] = useState(\"\");\r\n  const [category, setCat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!user && !user.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!product._id || updated || product._id !== match.params.id) {\r\n        dispatch({ type: UPDATE_PRODUCT_RESET });\r\n        dispatch(getProduct(match.params.id));\r\n      } else {\r\n        setName(product.name);\r\n        setBrand(product.brand);\r\n        setImage(product.image);\r\n        setDesc(product.description);\r\n        setCat(product.category);\r\n        setPrice(product.price);\r\n        setInStock(product.countInStock);\r\n      }\r\n    }\r\n  }, [dispatch, product._id, user, updated, match, history]);\r\n\r\n  const onSubmit = (e) => {\r\n    dispatch(\r\n      updateProductAction(match.params.id, {\r\n        name,\r\n        brand,\r\n        image,\r\n        description,\r\n        category,\r\n        price,\r\n        countInStock: inStock,\r\n      })\r\n    );\r\n    e.preventDefault();\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/uploadImage\", formData, config);\r\n      setImage(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-center'>\r\n      <FormContainer>\r\n        <Meta content='Orders Page' title={`Edit Product ${product.name}`} />\r\n\r\n        <form onSubmit={onSubmit} className='my-2'>\r\n          <h3>Edit Product</h3>\r\n          <div className='form-group'>\r\n            <label>Name</label>\r\n            <input\r\n              type='name'\r\n              className='form-control'\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n              placeholder='Name'\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Brand</label>\r\n            <input\r\n              type='brand'\r\n              className='form-control'\r\n              onChange={(e) => setBrand(e.target.value)}\r\n              value={brand}\r\n              placeholder='Brand'\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Category</label>\r\n            <input\r\n              type='category'\r\n              value={category}\r\n              onChange={(e) => setCat(e.target.value)}\r\n              className='form-control'\r\n              placeholder='Category'\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Image</label>\r\n            <input\r\n              type=''\r\n              onChange={(e) => setImage(e.target.value)}\r\n              value={image}\r\n              className='form-control'\r\n              placeholder='Image'\r\n            />\r\n            <Form.File\r\n              id='image-file'\r\n              label='Choose File'\r\n              custom\r\n              onChange={uploadFileHandler}\r\n            ></Form.File>\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Description</label>\r\n            <input\r\n              type='description'\r\n              onChange={(e) => setDesc(e.target.value)}\r\n              value={description}\r\n              className='form-control'\r\n              placeholder='Description'\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Price</label>\r\n            <input\r\n              type='price'\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              value={price}\r\n              className='form-control'\r\n              placeholder='Price'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label>Count In Stock</label>\r\n            <input\r\n              type='inStock'\r\n              onChange={(e) => setInStock(e.target.value)}\r\n              value={inStock}\r\n              className='form-control'\r\n              placeholder='Quantity in stock'\r\n            />\r\n          </div>\r\n\r\n          <input type='submit' value='Edit' className='btn btn-dark'></input>\r\n        </form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Carousel.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\Meta.js",[],"C:\\Users\\Mohanned\\Desktop\\contact-keeper\\client\\src\\components\\SearchBar.js",["418"],"import React, { useState } from \"react\";\r\nimport { MDBCol, MDBFormInline, MDBBtn, MDBIcon } from \"mdbreact\";\r\n\r\nconst SearchPage = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      keyword.trim();\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  return (\r\n    <MDBCol>\r\n      <MDBFormInline onSubmit={onSubmit} className='md-form'>\r\n        <input\r\n          className='form-control form-control-sm ml-3 w-75'\r\n          type='text'\r\n          placeholder='Search'\r\n          aria-label='Search'\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n        />\r\n        <MDBIcon\r\n          icon='search'\r\n          className='mx-2'\r\n          style={{ color: \"white\", cursor: \"pointer\" }}\r\n          onClick={onSubmit}\r\n        />\r\n      </MDBFormInline>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n",{"ruleId":"419","replacedBy":"420"},{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","severity":1,"message":"424","line":2,"column":10,"nodeType":"425","messageId":"426","endLine":2,"endColumn":18},{"ruleId":"423","severity":1,"message":"427","line":23,"column":42,"nodeType":"425","messageId":"426","endLine":23,"endColumn":48},{"ruleId":"423","severity":1,"message":"428","line":25,"column":8,"nodeType":"425","messageId":"426","endLine":25,"endColumn":18},{"ruleId":"423","severity":1,"message":"429","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":27},{"ruleId":"423","severity":1,"message":"430","line":1,"column":29,"nodeType":"425","messageId":"426","endLine":1,"endColumn":38},{"ruleId":"423","severity":1,"message":"429","line":1,"column":38,"nodeType":"425","messageId":"426","endLine":1,"endColumn":48},{"ruleId":"423","severity":1,"message":"431","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":22},{"ruleId":"423","severity":1,"message":"432","line":5,"column":10,"nodeType":"425","messageId":"426","endLine":5,"endColumn":18},{"ruleId":"423","severity":1,"message":"433","line":7,"column":10,"nodeType":"425","messageId":"426","endLine":7,"endColumn":30},{"ruleId":"419","replacedBy":"434"},{"ruleId":"421","replacedBy":"435"},{"ruleId":"423","severity":1,"message":"436","line":2,"column":16,"nodeType":"425","messageId":"426","endLine":2,"endColumn":25},{"ruleId":"423","severity":1,"message":"429","line":1,"column":38,"nodeType":"425","messageId":"426","endLine":1,"endColumn":48},{"ruleId":"423","severity":1,"message":"437","line":18,"column":8,"nodeType":"425","messageId":"426","endLine":18,"endColumn":14},{"ruleId":"423","severity":1,"message":"438","line":19,"column":10,"nodeType":"425","messageId":"426","endLine":19,"endColumn":30},{"ruleId":"439","severity":1,"message":"440","line":46,"column":6,"nodeType":"441","endLine":46,"endColumn":35,"suggestions":"442"},{"ruleId":"423","severity":1,"message":"429","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":27},{"ruleId":"423","severity":1,"message":"443","line":7,"column":3,"nodeType":"425","messageId":"426","endLine":7,"endColumn":7},{"ruleId":"423","severity":1,"message":"444","line":17,"column":8,"nodeType":"425","messageId":"426","endLine":17,"endColumn":19},{"ruleId":"423","severity":1,"message":"445","line":6,"column":3,"nodeType":"425","messageId":"426","endLine":6,"endColumn":16},{"ruleId":"423","severity":1,"message":"446","line":1,"column":8,"nodeType":"425","messageId":"426","endLine":1,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":22,"column":7,"nodeType":"449","messageId":"450","endLine":22,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":35,"column":7,"nodeType":"449","messageId":"450","endLine":35,"endColumn":13},{"ruleId":"423","severity":1,"message":"451","line":41,"column":3,"nodeType":"425","messageId":"426","endLine":41,"endColumn":18},{"ruleId":"447","severity":1,"message":"448","line":53,"column":7,"nodeType":"449","messageId":"450","endLine":53,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":63,"column":7,"nodeType":"449","messageId":"450","endLine":63,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":73,"column":7,"nodeType":"449","messageId":"450","endLine":73,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":84,"column":7,"nodeType":"449","messageId":"450","endLine":84,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":92,"column":7,"nodeType":"449","messageId":"450","endLine":92,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":103,"column":7,"nodeType":"449","messageId":"450","endLine":103,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":115,"column":7,"nodeType":"449","messageId":"450","endLine":115,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":124,"column":7,"nodeType":"449","messageId":"450","endLine":124,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":131,"column":7,"nodeType":"449","messageId":"450","endLine":131,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":138,"column":7,"nodeType":"449","messageId":"450","endLine":138,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":145,"column":7,"nodeType":"449","messageId":"450","endLine":145,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":154,"column":7,"nodeType":"449","messageId":"450","endLine":154,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":162,"column":7,"nodeType":"449","messageId":"450","endLine":162,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":170,"column":7,"nodeType":"449","messageId":"450","endLine":170,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":179,"column":7,"nodeType":"449","messageId":"450","endLine":179,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":188,"column":7,"nodeType":"449","messageId":"450","endLine":188,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":197,"column":7,"nodeType":"449","messageId":"450","endLine":197,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":204,"column":7,"nodeType":"449","messageId":"450","endLine":204,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":212,"column":7,"nodeType":"449","messageId":"450","endLine":212,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":222,"column":7,"nodeType":"449","messageId":"450","endLine":222,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":231,"column":7,"nodeType":"449","messageId":"450","endLine":231,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":238,"column":7,"nodeType":"449","messageId":"450","endLine":238,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":246,"column":7,"nodeType":"449","messageId":"450","endLine":246,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":254,"column":7,"nodeType":"449","messageId":"450","endLine":254,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":258,"column":7,"nodeType":"449","messageId":"450","endLine":258,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":265,"column":7,"nodeType":"449","messageId":"450","endLine":265,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":273,"column":7,"nodeType":"449","messageId":"450","endLine":273,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":280,"column":7,"nodeType":"449","messageId":"450","endLine":280,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":287,"column":7,"nodeType":"449","messageId":"450","endLine":287,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":295,"column":7,"nodeType":"449","messageId":"450","endLine":295,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":303,"column":7,"nodeType":"449","messageId":"450","endLine":303,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":311,"column":7,"nodeType":"449","messageId":"450","endLine":311,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":319,"column":7,"nodeType":"449","messageId":"450","endLine":319,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":328,"column":7,"nodeType":"449","messageId":"450","endLine":328,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":335,"column":7,"nodeType":"449","messageId":"450","endLine":335,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":343,"column":7,"nodeType":"449","messageId":"450","endLine":343,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":351,"column":7,"nodeType":"449","messageId":"450","endLine":351,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":358,"column":7,"nodeType":"449","messageId":"450","endLine":358,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":366,"column":7,"nodeType":"449","messageId":"450","endLine":366,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":374,"column":7,"nodeType":"449","messageId":"450","endLine":374,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":380,"column":7,"nodeType":"449","messageId":"450","endLine":380,"endColumn":13},{"ruleId":"423","severity":1,"message":"429","line":1,"column":27,"nodeType":"425","messageId":"426","endLine":1,"endColumn":37},{"ruleId":"423","severity":1,"message":"452","line":4,"column":8,"nodeType":"425","messageId":"426","endLine":4,"endColumn":19},{"ruleId":"423","severity":1,"message":"453","line":14,"column":11,"nodeType":"425","messageId":"426","endLine":14,"endColumn":15},{"ruleId":"423","severity":1,"message":"454","line":14,"column":24,"nodeType":"425","messageId":"426","endLine":14,"endColumn":29},{"ruleId":"423","severity":1,"message":"429","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":27},{"ruleId":"423","severity":1,"message":"453","line":12,"column":11,"nodeType":"425","messageId":"426","endLine":12,"endColumn":15},{"ruleId":"423","severity":1,"message":"455","line":12,"column":42,"nodeType":"425","messageId":"426","endLine":12,"endColumn":49},{"ruleId":"423","severity":1,"message":"429","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":27},{"ruleId":"423","severity":1,"message":"452","line":4,"column":8,"nodeType":"425","messageId":"426","endLine":4,"endColumn":19},{"ruleId":"423","severity":1,"message":"430","line":1,"column":41,"nodeType":"425","messageId":"426","endLine":1,"endColumn":50},{"ruleId":"447","severity":1,"message":"448","line":29,"column":7,"nodeType":"449","messageId":"450","endLine":29,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":35,"column":7,"nodeType":"449","messageId":"450","endLine":35,"endColumn":13},{"ruleId":"423","severity":1,"message":"429","line":1,"column":27,"nodeType":"425","messageId":"426","endLine":1,"endColumn":37},{"ruleId":"423","severity":1,"message":"452","line":4,"column":8,"nodeType":"425","messageId":"426","endLine":4,"endColumn":19},{"ruleId":"439","severity":1,"message":"456","line":26,"column":6,"nodeType":"441","endLine":26,"endColumn":15,"suggestions":"457"},{"ruleId":"447","severity":1,"message":"448","line":17,"column":7,"nodeType":"449","messageId":"450","endLine":17,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":24,"column":7,"nodeType":"449","messageId":"450","endLine":24,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":32,"column":7,"nodeType":"449","messageId":"450","endLine":32,"endColumn":13},{"ruleId":"423","severity":1,"message":"429","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":27},{"ruleId":"423","severity":1,"message":"430","line":1,"column":29,"nodeType":"425","messageId":"426","endLine":1,"endColumn":38},{"ruleId":"423","severity":1,"message":"452","line":6,"column":8,"nodeType":"425","messageId":"426","endLine":6,"endColumn":19},{"ruleId":"423","severity":1,"message":"458","line":7,"column":8,"nodeType":"425","messageId":"426","endLine":7,"endColumn":13},{"ruleId":"423","severity":1,"message":"459","line":13,"column":11,"nodeType":"425","messageId":"426","endLine":13,"endColumn":24},{"ruleId":"423","severity":1,"message":"460","line":4,"column":22,"nodeType":"425","messageId":"426","endLine":4,"endColumn":30},{"ruleId":"423","severity":1,"message":"452","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":19},{"ruleId":"423","severity":1,"message":"458","line":5,"column":8,"nodeType":"425","messageId":"426","endLine":5,"endColumn":13},{"ruleId":"423","severity":1,"message":"461","line":6,"column":10,"nodeType":"425","messageId":"426","endLine":6,"endColumn":19},{"ruleId":"423","severity":1,"message":"462","line":32,"column":26,"nodeType":"425","messageId":"426","endLine":32,"endColumn":39},{"ruleId":"423","severity":1,"message":"463","line":35,"column":10,"nodeType":"425","messageId":"426","endLine":35,"endColumn":18},{"ruleId":"439","severity":1,"message":"464","line":66,"column":6,"nodeType":"441","endLine":66,"endColumn":69,"suggestions":"465"},{"ruleId":"423","severity":1,"message":"466","line":3,"column":10,"nodeType":"425","messageId":"426","endLine":3,"endColumn":14},{"ruleId":"423","severity":1,"message":"467","line":14,"column":11,"nodeType":"425","messageId":"426","endLine":14,"endColumn":21},{"ruleId":"423","severity":1,"message":"429","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":27},{"ruleId":"423","severity":1,"message":"452","line":7,"column":8,"nodeType":"425","messageId":"426","endLine":7,"endColumn":19},{"ruleId":"439","severity":1,"message":"440","line":25,"column":6,"nodeType":"441","endLine":25,"endColumn":21,"suggestions":"468"},{"ruleId":"447","severity":1,"message":"448","line":37,"column":7,"nodeType":"449","messageId":"450","endLine":37,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":43,"column":7,"nodeType":"449","messageId":"450","endLine":43,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":50,"column":7,"nodeType":"449","messageId":"450","endLine":50,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":101,"column":7,"nodeType":"449","messageId":"450","endLine":101,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":110,"column":7,"nodeType":"449","messageId":"450","endLine":110,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":121,"column":7,"nodeType":"449","messageId":"450","endLine":121,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":135,"column":7,"nodeType":"449","messageId":"450","endLine":135,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":141,"column":7,"nodeType":"449","messageId":"450","endLine":141,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":148,"column":7,"nodeType":"449","messageId":"450","endLine":148,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":166,"column":7,"nodeType":"449","messageId":"450","endLine":166,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":176,"column":7,"nodeType":"449","messageId":"450","endLine":176,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":190,"column":7,"nodeType":"449","messageId":"450","endLine":190,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":202,"column":7,"nodeType":"449","messageId":"450","endLine":202,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":210,"column":7,"nodeType":"449","messageId":"450","endLine":210,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":224,"column":7,"nodeType":"449","messageId":"450","endLine":224,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":235,"column":7,"nodeType":"449","messageId":"450","endLine":235,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":243,"column":7,"nodeType":"449","messageId":"450","endLine":243,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":258,"column":7,"nodeType":"449","messageId":"450","endLine":258,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":269,"column":7,"nodeType":"449","messageId":"450","endLine":269,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":277,"column":7,"nodeType":"449","messageId":"450","endLine":277,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":288,"column":7,"nodeType":"449","messageId":"450","endLine":288,"endColumn":13},{"ruleId":"423","severity":1,"message":"446","line":1,"column":8,"nodeType":"425","messageId":"426","endLine":1,"endColumn":13},{"ruleId":"423","severity":1,"message":"445","line":3,"column":3,"nodeType":"425","messageId":"426","endLine":3,"endColumn":16},{"ruleId":"423","severity":1,"message":"469","line":15,"column":3,"nodeType":"425","messageId":"426","endLine":15,"endColumn":24},{"ruleId":"423","severity":1,"message":"470","line":16,"column":3,"nodeType":"425","messageId":"426","endLine":16,"endColumn":24},{"ruleId":"423","severity":1,"message":"471","line":17,"column":3,"nodeType":"425","messageId":"426","endLine":17,"endColumn":21},{"ruleId":"423","severity":1,"message":"472","line":18,"column":3,"nodeType":"425","messageId":"426","endLine":18,"endColumn":22},{"ruleId":"423","severity":1,"message":"473","line":19,"column":3,"nodeType":"425","messageId":"426","endLine":19,"endColumn":22},{"ruleId":"423","severity":1,"message":"474","line":20,"column":3,"nodeType":"425","messageId":"426","endLine":20,"endColumn":19},{"ruleId":"423","severity":1,"message":"475","line":21,"column":3,"nodeType":"425","messageId":"426","endLine":21,"endColumn":22},{"ruleId":"423","severity":1,"message":"476","line":22,"column":3,"nodeType":"425","messageId":"426","endLine":22,"endColumn":22},{"ruleId":"423","severity":1,"message":"477","line":23,"column":3,"nodeType":"425","messageId":"426","endLine":23,"endColumn":19},{"ruleId":"447","severity":1,"message":"448","line":33,"column":7,"nodeType":"449","messageId":"450","endLine":33,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":43,"column":7,"nodeType":"449","messageId":"450","endLine":43,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":53,"column":7,"nodeType":"449","messageId":"450","endLine":53,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":64,"column":7,"nodeType":"449","messageId":"450","endLine":64,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":79,"column":7,"nodeType":"449","messageId":"450","endLine":79,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":90,"column":7,"nodeType":"449","messageId":"450","endLine":90,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":102,"column":7,"nodeType":"449","messageId":"450","endLine":102,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":117,"column":7,"nodeType":"449","messageId":"450","endLine":117,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":126,"column":7,"nodeType":"449","messageId":"450","endLine":126,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":134,"column":7,"nodeType":"449","messageId":"450","endLine":134,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":150,"column":7,"nodeType":"449","messageId":"450","endLine":150,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":157,"column":7,"nodeType":"449","messageId":"450","endLine":157,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":164,"column":7,"nodeType":"449","messageId":"450","endLine":164,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":168,"column":7,"nodeType":"449","messageId":"450","endLine":168,"endColumn":13},{"ruleId":"423","severity":1,"message":"469","line":15,"column":3,"nodeType":"425","messageId":"426","endLine":15,"endColumn":24},{"ruleId":"423","severity":1,"message":"470","line":16,"column":3,"nodeType":"425","messageId":"426","endLine":16,"endColumn":24},{"ruleId":"423","severity":1,"message":"471","line":17,"column":3,"nodeType":"425","messageId":"426","endLine":17,"endColumn":21},{"ruleId":"423","severity":1,"message":"472","line":18,"column":3,"nodeType":"425","messageId":"426","endLine":18,"endColumn":22},{"ruleId":"423","severity":1,"message":"473","line":19,"column":3,"nodeType":"425","messageId":"426","endLine":19,"endColumn":22},{"ruleId":"423","severity":1,"message":"474","line":20,"column":3,"nodeType":"425","messageId":"426","endLine":20,"endColumn":19},{"ruleId":"423","severity":1,"message":"475","line":21,"column":3,"nodeType":"425","messageId":"426","endLine":21,"endColumn":22},{"ruleId":"423","severity":1,"message":"476","line":22,"column":3,"nodeType":"425","messageId":"426","endLine":22,"endColumn":22},{"ruleId":"423","severity":1,"message":"477","line":23,"column":3,"nodeType":"425","messageId":"426","endLine":23,"endColumn":19},{"ruleId":"447","severity":1,"message":"448","line":45,"column":7,"nodeType":"449","messageId":"450","endLine":45,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":49,"column":7,"nodeType":"449","messageId":"450","endLine":49,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":62,"column":7,"nodeType":"449","messageId":"450","endLine":62,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":66,"column":7,"nodeType":"449","messageId":"450","endLine":66,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":158,"column":7,"nodeType":"449","messageId":"450","endLine":158,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":166,"column":7,"nodeType":"449","messageId":"450","endLine":166,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":173,"column":7,"nodeType":"449","messageId":"450","endLine":173,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":186,"column":7,"nodeType":"449","messageId":"450","endLine":186,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":194,"column":7,"nodeType":"449","messageId":"450","endLine":194,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":202,"column":7,"nodeType":"449","messageId":"450","endLine":202,"endColumn":13},{"ruleId":"423","severity":1,"message":"451","line":8,"column":3,"nodeType":"425","messageId":"426","endLine":8,"endColumn":18},{"ruleId":"423","severity":1,"message":"478","line":8,"column":3,"nodeType":"425","messageId":"426","endLine":8,"endColumn":17},{"ruleId":"423","severity":1,"message":"479","line":20,"column":20,"nodeType":"425","messageId":"426","endLine":20,"endColumn":34},{"ruleId":"423","severity":1,"message":"480","line":22,"column":29,"nodeType":"425","messageId":"426","endLine":22,"endColumn":42},{"ruleId":"439","severity":1,"message":"481","line":43,"column":6,"nodeType":"441","endLine":43,"endColumn":60,"suggestions":"482"},{"ruleId":"423","severity":1,"message":"483","line":2,"column":33,"nodeType":"425","messageId":"426","endLine":2,"endColumn":39},"no-native-reassign",["484"],"no-negated-in-lhs",["485"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'OrderState' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'ProductContext' is defined but never used.","'Carousel' is defined but never used.","'GET_ALL_ORDERS_RESET' is defined but never used.",["484"],["485"],"'Container' is defined but never used.","'Loader' is defined but never used.","'REVIEW_PRODUCT_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["486"],"'List' is defined but never used.","'CartContext' is defined but never used.","'ADD_IEMS_FAIL' is defined but never used.","'React' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'PAY_ORDER_RESET' is defined but never used.","'UserContext' is defined but never used.","'user' is assigned a value but never used.","'login' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'shippingAddress.address', 'shippingAddress.city', 'shippingAddress.country', 'shippingAddress.name', and 'shippingAddress.postalCode'. Either include them or remove the dependency array.",["487"],"'axios' is defined but never used.","'paymentMethod' is assigned a value but never used.","'getOrder' is defined but never used.","'useParams' is defined but never used.","'loadingPaypal' is assigned a value but never used.","'sdkReady' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order.paymentMethod'. Either include it or remove the dependency array.",["488"],"'Link' is defined but never used.","'updateUser' is assigned a value but never used.",["489"],"'GET_ALL_USERS_REQUEST' is defined but never used.","'GET_ALL_USERS_SUCCESS' is defined but never used.","'GET_ALL_USERS_FAIL' is defined but never used.","'DELETE_USER_SUCCESS' is defined but never used.","'DELETE_USER_REQUEST' is defined but never used.","'DELETE_USER_FAIL' is defined but never used.","'UPDATE_USER_REQUEST' is defined but never used.","'UPDATE_USER_SUCCESS' is defined but never used.","'UPDATE_USER_FAIL' is defined but never used.","'productActions' is defined but never used.","'createdProduct' is assigned a value but never used.","'deleteLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product.brand', 'product.category', 'product.countInStock', 'product.description', 'product.image', 'product.name', and 'product.price'. Either include them or remove the dependency array.",["490"],"'MDBBtn' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},"Update the dependencies array to be: [dispatch, match, successProductReview]",{"range":"501","text":"502"},"Update the dependencies array to be: [entered, shippingAddress.address, shippingAddress.city, shippingAddress.country, shippingAddress.name, shippingAddress.postalCode]",{"range":"503","text":"504"},"Update the dependencies array to be: [dispatch, match, order._id, successPaypal, success, delivered, order.paymentMethod]",{"range":"505","text":"506"},"Update the dependencies array to be: [dispatch, history, user]",{"range":"507","text":"508"},"Update the dependencies array to be: [dispatch, product._id, user, updated, match, history, product.name, product.brand, product.image, product.description, product.category, product.price, product.countInStock]",{"range":"509","text":"510"},[1533,1562],"[dispatch, match, successProductReview]",[1009,1018],"[entered, shippingAddress.address, shippingAddress.city, shippingAddress.country, shippingAddress.name, shippingAddress.postalCode]",[2491,2554],"[dispatch, match, order._id, successPaypal, success, delivered, order.paymentMethod]",[786,801],"[dispatch, history, user]",[1683,1737],"[dispatch, product._id, user, updated, match, history, product.name, product.brand, product.image, product.description, product.category, product.price, product.countInStock]"]